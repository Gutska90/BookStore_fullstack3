-- =====================================================
-- SCRIPT DE BASE DE DATOS ORACLE
-- Sistema de Gestión de Laboratorios y Resultados de Análisis
-- =====================================================

-- Eliminar tablas si existen (para desarrollo)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE RESULTADOS_ANALISIS CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE LABORATORIOS CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE USUARIOS CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/

-- Eliminar secuencias si existen
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE RESULTADO_SEQ';
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE LABORATORIO_SEQ';
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE USUARIO_SEQ';
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/

-- =====================================================
-- CREACIÓN DE SECUENCIAS
-- =====================================================

CREATE SEQUENCE USUARIO_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE LABORATORIO_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE RESULTADO_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- =====================================================
-- CREACIÓN DE TABLAS
-- =====================================================

-- Tabla: USUARIOS
CREATE TABLE USUARIOS (
    ID NUMBER(19,0) PRIMARY KEY,
    NOMBRE_COMPLETO VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    CONTRASENA VARCHAR2(255) NOT NULL,
    ROL VARCHAR2(20) NOT NULL,
    ESTADO VARCHAR2(20) NOT NULL DEFAULT 'ACTIVO',
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_ACTUALIZACION TIMESTAMP,
    VERSION NUMBER(19,0) DEFAULT 0,
    CONSTRAINT CHK_ROL CHECK (ROL IN ('ADMINISTRADOR', 'TECNICO', 'PACIENTE')),
    CONSTRAINT CHK_ESTADO_USUARIO CHECK (ESTADO IN ('ACTIVO', 'INACTIVO'))
);

-- Tabla: LABORATORIOS
CREATE TABLE LABORATORIOS (
    ID NUMBER(19,0) PRIMARY KEY,
    NOMBRE VARCHAR2(200) NOT NULL,
    DIRECCION VARCHAR2(500),
    TELEFONO VARCHAR2(20),
    EMAIL_CONTACTO VARCHAR2(100),
    ESTADO VARCHAR2(20) NOT NULL DEFAULT 'ACTIVO',
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_ACTUALIZACION TIMESTAMP,
    VERSION NUMBER(19,0) DEFAULT 0,
    CONSTRAINT CHK_ESTADO_LAB CHECK (ESTADO IN ('ACTIVO', 'INACTIVO'))
);

-- Tabla: RESULTADOS_ANALISIS
CREATE TABLE RESULTADOS_ANALISIS (
    ID NUMBER(19,0) PRIMARY KEY,
    USUARIO_ID NUMBER(19,0) NOT NULL,
    LABORATORIO_ID NUMBER(19,0) NOT NULL,
    TIPO_ANALISIS VARCHAR2(200) NOT NULL,
    FECHA_REALIZACION DATE NOT NULL,
    FECHA_RESULTADO DATE,
    VALORES CLOB,
    OBSERVACIONES VARCHAR2(1000),
    ESTADO VARCHAR2(20) NOT NULL DEFAULT 'PENDIENTE',
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_ACTUALIZACION TIMESTAMP,
    VERSION NUMBER(19,0) DEFAULT 0,
    CONSTRAINT FK_RESULTADO_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID),
    CONSTRAINT FK_RESULTADO_LABORATORIO FOREIGN KEY (LABORATORIO_ID) REFERENCES LABORATORIOS(ID),
    CONSTRAINT CHK_ESTADO_RESULTADO CHECK (ESTADO IN ('PENDIENTE', 'COMPLETADO', 'CANCELADO'))
);

-- =====================================================
-- CREACIÓN DE ÍNDICES
-- =====================================================

CREATE INDEX idx_email ON USUARIOS(EMAIL);
CREATE INDEX idx_rol ON USUARIOS(ROL);
CREATE INDEX idx_nombre_lab ON LABORATORIOS(NOMBRE);
CREATE INDEX idx_estado_lab ON LABORATORIOS(ESTADO);
CREATE INDEX idx_usuario_resultado ON RESULTADOS_ANALISIS(USUARIO_ID);
CREATE INDEX idx_laboratorio_resultado ON RESULTADOS_ANALISIS(LABORATORIO_ID);
CREATE INDEX idx_tipo_analisis ON RESULTADOS_ANALISIS(TIPO_ANALISIS);
CREATE INDEX idx_estado_resultado ON RESULTADOS_ANALISIS(ESTADO);

-- =====================================================
-- TRIGGERS PARA AUTO-INCREMENTO
-- =====================================================

CREATE OR REPLACE TRIGGER TRG_USUARIO_ID
    BEFORE INSERT ON USUARIOS
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        :NEW.ID := USUARIO_SEQ.NEXTVAL;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_LABORATORIO_ID
    BEFORE INSERT ON LABORATORIOS
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        :NEW.ID := LABORATORIO_SEQ.NEXTVAL;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_RESULTADO_ID
    BEFORE INSERT ON RESULTADOS_ANALISIS
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        :NEW.ID := RESULTADO_SEQ.NEXTVAL;
    END IF;
END;
/

-- =====================================================
-- DATOS DE PRUEBA (Mínimo 3 registros por tabla)
-- =====================================================

-- NOTA: Las contraseñas están encriptadas con BCrypt
-- Contraseña "admin123" = $2a$10$N9qo8uLOickgx2ZMRZoMyeIjZAgcfl7p92ldGxad68LJZdL17lhWy
-- Contraseña "tecnico123" = $2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
-- Contraseña "paciente123" = $2a$10$K3S5Zq8nFz7qG8vC9h1XQu7Y8Z3Q5R7T9V1W3X5Y7Z9A1B3C5D7E

-- Usuarios de prueba (3 usuarios - ADMINISTRADOR, TECNICO, PACIENTE)
INSERT INTO USUARIOS (NOMBRE_COMPLETO, EMAIL, CONTRASENA, ROL, ESTADO) VALUES
('Administrador Sistema', 'admin@lab.com', '$2a$10$N9qo8uLOickgx2ZMRZoMyeIjZAgcfl7p92ldGxad68LJZdL17lhWy', 'ADMINISTRADOR', 'ACTIVO');

INSERT INTO USUARIOS (NOMBRE_COMPLETO, EMAIL, CONTRASENA, ROL, ESTADO) VALUES
('Técnico Lab Central', 'tecnico@lab.com', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'TECNICO', 'ACTIVO');

INSERT INTO USUARIOS (NOMBRE_COMPLETO, EMAIL, CONTRASENA, ROL, ESTADO) VALUES
('Paciente Ejemplo', 'paciente@lab.com', '$2a$10$K3S5Zq8nFz7qG8vC9h1XQu7Y8Z3Q5R7T9V1W3X5Y7Z9A1B3C5D7E', 'PACIENTE', 'ACTIVO');

-- Laboratorios de prueba (3 laboratorios)
INSERT INTO LABORATORIOS (NOMBRE, DIRECCION, TELEFONO, EMAIL_CONTACTO, ESTADO) VALUES
('Laboratorio Clínico Central', 'Av. Principal 123, Santiago', '+56912345678', 'contacto@labcentral.cl', 'ACTIVO');

INSERT INTO LABORATORIOS (NOMBRE, DIRECCION, TELEFONO, EMAIL_CONTACTO, ESTADO) VALUES
('Laboratorio de Patología', 'Calle Los Médicos 456, Santiago', '+56987654321', 'info@labpatologia.cl', 'ACTIVO');

INSERT INTO LABORATORIOS (NOMBRE, DIRECCION, TELEFONO, EMAIL_CONTACTO, ESTADO) VALUES
('Laboratorio de Genética', 'Av. Científica 789, Santiago', '+56911223344', 'genetica@labgen.cl', 'ACTIVO');

-- Resultados de análisis de prueba (3 resultados)
-- NOTA: Los IDs de usuario y laboratorio se asignarán automáticamente
INSERT INTO RESULTADOS_ANALISIS (USUARIO_ID, LABORATORIO_ID, TIPO_ANALISIS, FECHA_REALIZACION, FECHA_RESULTADO, VALORES, OBSERVACIONES, ESTADO) VALUES
(2, 1, 'Hemograma Completo', DATE '2024-10-20', DATE '2024-10-21', '{"Glóbulos Rojos": "4.5 millones/mm³", "Hemoglobina": "14.2 g/dL", "Hematocrito": "42%", "Glóbulos Blancos": "7000/mm³", "Plaquetas": "250000/mm³"}', 'Valores dentro de rangos normales', 'COMPLETADO');

INSERT INTO RESULTADOS_ANALISIS (USUARIO_ID, LABORATORIO_ID, TIPO_ANALISIS, FECHA_REALIZACION, FECHA_RESULTADO, VALORES, OBSERVACIONES, ESTADO) VALUES
(3, 2, 'Biopsia de Tejido', DATE '2024-10-18', DATE '2024-10-25', '{"Tipo": "Biopsia por punción", "Resultado": "Tejido benigno sin alteraciones significativas", "Método": "Histología"}', 'Resultado satisfactorio, seguimiento en 6 meses', 'COMPLETADO');

INSERT INTO RESULTADOS_ANALISIS (USUARIO_ID, LABORATORIO_ID, TIPO_ANALISIS, FECHA_REALIZACION, VALORES, OBSERVACIONES, ESTADO) VALUES
(3, 3, 'Prueba Genética BRCA', DATE '2024-10-22', '{"Gen BRCA1": "Negativo", "Gen BRCA2": "Pendiente", "Fecha Muestra": "2024-10-22"}', 'Análisis en proceso, resultado parcial disponible', 'PENDIENTE');

-- =====================================================
-- COMMIT DE LOS DATOS
-- =====================================================
COMMIT;

-- =====================================================
-- VERIFICACIÓN DE DATOS INSERTADOS
-- =====================================================
SELECT 'Usuarios creados:' AS INFO, COUNT(*) AS CANTIDAD FROM USUARIOS;
SELECT 'Laboratorios creados:' AS INFO, COUNT(*) AS CANTIDAD FROM LABORATORIOS;
SELECT 'Resultados creados:' AS INFO, COUNT(*) AS CANTIDAD FROM RESULTADOS_ANALISIS;

-- Consulta de verificación
SELECT 
    u.ROL,
    COUNT(*) AS CANTIDAD_USUARIOS
FROM USUARIOS u
GROUP BY u.ROL;

SELECT 
    l.ESTADO,
    COUNT(*) AS CANTIDAD_LABORATORIOS
FROM LABORATORIOS l
GROUP BY l.ESTADO;

SELECT 
    r.ESTADO,
    COUNT(*) AS CANTIDAD_RESULTADOS
FROM RESULTADOS_ANALISIS r
GROUP BY r.ESTADO;

-- =====================================================
-- FIN DEL SCRIPT
-- =====================================================

